# AXP2101 ESP-IDF Driver

AXP2101 driver for ESP-IDF, written in C.  
Implements low-level control and configuration for the [X-Powers AXP2101 PMIC](https://www.x-powers.com/product/AXP2101_en.php), including power rails, battery management, interrupt handling, and ADC readings.

## Features

✅ Written in pure C, no external dependencies  
✅ ESP-IDF compatible (uses I2C Master API)  
✅ Clean separation between register-level and high-level logic  
✅ Easy-to-use enums for setting voltages and currents  
✅ Detailed PMU status and IRQ printouts for debugging

---

## Supported Features

- [x] DCDC and LDO enable/disable
- [x] DCDC voltage configuration (all 5 DCDC converters)
- [x] Battery charge current, precharge current, termination current
- [x] Charge target voltage selection
- [x] Battery presence/status reading
- [x] ADC measurement control (VBUS, VBAT, VSYS)
- [x] TS (thermistor input) enable/disable
- [x] Interrupt enable per event
- [x] PMU and IRQ status decoding
- [x] Fuel gauge: battery percentage
- [x] Complete register getter/setter layer

---

## File Structure

```
axp2101/
├── axp2101.h                  // Public high-level driver API
├── axp2101.c                  // High-level implementation
├── axp2101_registers.h        // Register map and low-level prototypes
├── axp2101_registers.c        // Low-level register access via I2C
```

---

## Example Usage

```c
#include "axp2101.h"

void app_main(void) {
    i2c_master_bus_handle_t i2c_bus = init_i2c(); // your own I2C init logic
    axp2101_init(i2c_bus);

    if (axp2101_check_chip_id() != ESP_OK) {
        printf("AXP2101 not found!\n");
        return;
    }

    // Enable DCDC1 at 3.3V
    axp2101_set_dcdc_voltage(AXP2101_DCDC1, 3.3f);
    axp2101_set_dcdc_enabled(AXP2101_DCDC1, true);

    // Print battery state
    axp2101_batt_status_t status;
    axp2101_get_battery_status(&status);

    uint8_t percent;
    axp2101_get_battery_percentage(&percent);
    printf("Battery status: %d%%\n", percent);
}
```

---

## Dependencies

- ESP-IDF v5.0 or later  
- Compatible with any ESP32 SoC using the `i2c_master` API

---

## License

MIT License  
(c) 2025 Kevin Assen / Protoconcept  
See [`axp2101.c`](axp2101.c) and [`axp2101_registers.c`](axp2101_registers.c) for full license terms.

---

## Author

Developed by [Kevin Assen](https://www.protoconcept.nl)  
Firmware | PCB | Prototyping  
Contact: kevin@protoconcept.nl

